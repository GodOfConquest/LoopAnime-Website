{% extends "::base.html.twig" %}

{% block jshead %}
    {{ parent() }}
    <script type="text/javascript" src="//cdn.sublimevideo.net/js/gut6yssr.js"></script>
{% endblock %}

{% block body %}
<div class="col-sm-12 content-breadcrumb" style="padding-top: 30px;">
    <div class="col-sm-12 col-md-10">
        <div class="col-sm-12 col-md-8 breadcrumb">
            <ol class="breadcrumb">
                <li  class="primary"><a href="{{ path("loopanime_shows_listAnimes") }}">Animes</a></li>
                <li><a href="{{ path("loopanime_shows_anime",{idAnime: anime.id}) }}">{{ anime.title }}</a></li>
                <li>
                    Season: {{ season.season }} Episode: {{ episode.episode }}
                </li>
            </ol>
        </div>
    </div>
</div>

<div class="col-sm-12">
    <!-- Main Box -->
    <div class="col-sm-12 col-md-8">
        <div class="col-sm-12 text-center">
            <h3 class="title">{{ episode.episodeTitle }}</h3>
        </div>
        <div class="col-sm-12">
            <div class="col-sm-12 col-md-10 video_player_content">
                {% if selLink is not defined or links|length == 0 %}
                    <br>
                    <div class="sad-face"></div>
                    <p class="text-center">Sorry this episode doesn't have any video mirror added yet! <br>
                        <strong>This episode is not yet ready to be displayed!</strong></p>
                {% elseif isIframe %}
                    <iframe src="{{ links[selLink].link }}" style="border:0px; width: 908px; height: 300px;"></iframe>
                {% else %}
                    <div class="videoplayer">
                        <video id="video1" class="sublime" width="908" height="300" data-uid="" preload="none" poster="{{ episode.poster }}"
                               data-sharing-image='poster' data-sharing-enable="true" data-sharing-url="{{ app.request.uri }}" data-sharing-title='Loop-Anime.com - Watch & Track anime online' data-sharing-text='I am watching {{ anime.title }} {{ episode.episodeTitle }} on Loop-Anime.com'>
                            <source src="{{ initialLink }}">
                        </video>
                    </div>
                {% endif %}
            </div>
            <div class="col-md-2 text-center blue">
                <i class="fa fa-clock-o fa-2x"></i><br/>{{ episode.airDate|date('d-m-Y') }}<br/><br/>
                <i class="fa fa-user fa-2x"></i><br/>{% if links is not empty %}{{ links[selLink].user }}{% else %}N/A{% endif %}<br/><br/>
                <i class="fa fa-comment fa-2x"></i><br/>{{ comments|length }}<br/><br/>
                <i class="fa fa-heart fa-2x"></i><br/>{{ totalFavorites }}<br/><br/>
            </div>
        </div>
        <div class="col-sm-12 share-container">
            Share:&nbsp;
            <i class="fa fa-facebook-square"></i>&nbsp;
            <i class="fa fa-google-plus-square"></i>
        </div>
        <div class="col-sm-12 comments-container">
            <h2 class="blue">{{ comments|length }} Comments</h2>
            <div class="col-sm-12">
                <div class="col-sm-4">
                    <b class="blue">Matt Dill</b>
                </div>
                <div class="col-sm-6">
                    26 June 2013, 15:20
                </div>
                <div class="col-sm-2">
                    <i class="fa fa-refresh"></i>
                </div>
            </div>
            <div class="col-sm-12 well">
                <div class="col-sm-4">
                    <img class="thumbnail" src="" width="80px" height="80px"/>
                </div>
                <div class="col-sm-8">
                    Some random comment text about the user and the episode
                </div>
            </div>
        </div>

        <div class="col-sm-12">
            <h2 class="blue">Leave a Comment</h2>
            <form action="" method="POST" class="form-vertical">
                <div class="col-sm-8">
                    <input class="col-sm-10 form-control form-field" name="name" type="text" />
                </div>
                <div class="col-sm-4">
                    Name
                </div>
                <div class="col-sm-8">
                    <input class="col-sm-10 form-control form-field" name="name" type="text" />
                </div>
                <div class="col-sm-4">
                    Email
                </div>
                <div class="col-sm-8">
                    <input class="col-sm-10 form-control form-field" name="name" type="text" class="" />
                </div>
                <div class="col-sm-4">
                    Website
                </div>
                <div class="col-sm-8">
                    <textarea name="comment" class="form-control form-field"></textarea>
                </div>
                <div class="col-sm-4">
                    Comment
                </div>
                <button class="btn btn-primary col-sm-12 btn-pink">Send</button>
            </form>
        </div>
    </div>
    <!-- end of main box -->

    <!-- Side bar -->
    <div class="col-sm-12 col-md-4">
        <div class="col-sm-12 text-center">
            <h4 class="title"><i class="fa fa-desktop fa-2x"></i> Watch Next</h4>
        </div>
        <div class="col-sm-12 release-container text-center">
            <i class="fa fa-spin fa-circle-o-notch"></i> Loading..
        </div>
    </div>
</div>
{% endblock %}

{% block javascript %}
<script type="text/javascript">
    $(document).ready(function(e) {
        var player;
        var id_episode 	= '{{ episode.id }}';
        var id_anime 	= '{{ anime.id }}';
        var id_link 	= '{% if links|length > 0 %}{{ links[selLink].id }}{% endif %}';
        var show_info	= true;
        var saveProgress;

        function saveProgressSeen() {
            var seconds = player.playbackTime();
            {% if app.user %}
            $.ajax({
                url: '{{ path("loopanime_shows_episodeAjax") }}',
                data: {op: 'set_progress', id_episode: id_episode, id_link: id_link, watched_time: seconds},
                dataType: 'JSON',
                type: 'GET'
            });
            {% endif %}
        }

        // Function that marks as seen
        function automatic_markAsSeen() {
            $('#btn_mark_seen').trigger("click");
        }

        var associatedTab = "#comments_section";
        // Tabs
        $(document).on('click', ".nav-pills li a, ul.pagination li a", function(e) {
            e.preventDefault();

            var href = $(this).attr("href");
            if($(this).attr("associatedTab")) {
                $(".nav-pills li.active").removeClass("active");
                $(this).parent().addClass("active");
                associatedTab = $(this).attr("associatedTab");
            }

            $(".tab_section").hide();
            $(associatedTab).html("<div class='row loader_div'></div>").show();

            $.ajax({
                url: $(this).attr("href"),
                type: "GET"
            }).success(function(data) {
                $(associatedTab).html(data);
            });
        });

        // Episodes Navigate
        $('.nav_controls_prev_episode').click(function(e) {
            window.location = $('#prev_episode_div').find("a").attr("href");
        }).mouseenter(function(e) {
            $('#prev_episode_div').show().position({of: $(this), my: "left top", at: "right top" });
        }).mouseleave(function(e) {
            $('#prev_episode_div').hide();
        });

        $('.nav_controls_next_episode').click(function(e) {
            window.location = $('#next_episode_div').find("a").attr("href");
        }).mouseenter(function(e) {
            $('#next_episode_div').show().position({of: $(this), my: "right top", at: "left top" });
        }).mouseleave(function(e) {
            $('#next_episode_div').hide();
        });

        // Mark as favorite
        $('#btn_mark_favorite').click(function(e) {
            var btn = $(this);
            $.ajax({
                url: '{{ path("loopanime_shows_episodeAjax") }}',
                data: {op: 'mark_favorite', id_anime: id_anime},
                dataType: 'JSON',
                type: 'GET'
            }).done(function(data) {

                btn.toggleClass('btn-success').toggleClass('btn-warning');

                if(btn.hasClass('btn-warning'))
                    btn.html('<div class="glyphicon glyphicon-star pull-left"></div>&nbsp;Favorite');
                else
                    btn.html('<div class="glyphicon glyphicon-star pull-left"></div>&nbsp;Mark as Favorite');

                // Show Alerts
                //if(show_info) $('body').append(data);

            });
        });

        // Mark as seen
        $('#btn_mark_seen').click(function(e) {
            e.preventDefault();
            var btn = $(this);

            $.ajax({
                url: '{{ path("loopanime_shows_episodeAjax") }}',
                data: {op: 'mark_as_seen', id_episode: id_episode, id_link: id_link},
                dataType: 'JSON',
                type: 'GET'
            }).done(function(data) {
                btn.toggleClass('btn-success').toggleClass('btn-info');

                if(btn.hasClass('btn-info'))
                    btn.html('<div class="glyphicon glyphicon-eye-open pull-left"></div>&nbsp;Seen');
                else
                    btn.html('<div class="glyphicon glyphicon-eye-open pull-left"></div>&nbsp;Mark as Seen');

                // Show Alerts
                //if(show_info) $('body').append(data);
            });
        });

        // Comment , submit new coment
        $(document).on('click','#btn_comment',function(e) {
            e.preventDefault();
            alert('clicked');
            $.ajax({
                url: '{{ path("loopanime_shows_episodeAjax") }}',
                data: {op: 'comment_episode', id_episode: id_episode, comment: $('#comment_text').val()},
                type: 'GET',
                dataType: 'JSON'
            }).done(function(data) {
                $('#commentsSectionLink').trigger('click');
                $('body').append(data);
            });
        });

        // Selecting a Mirror -- change the player
        $('.selMirror').click(function(e) {
            e.preventDefault();
            var url = this.href;
            var currentView = player.playbackTime();
            player.stop();
            $.ajax({
                url: url,
                type: 'GET',
                dataType: 'JSON'
            }).done(function(data){
                data = data.payload.links[0];
                var current_width = 908;
                var current_height = 300;
                $('.videoplayer').remove();

                var videoPlayer = $('<div/>').addClass('videoplayer');
                var newVideo = $('<video/>').addClass('sublime')
                        .attr('width', current_width)
                        .attr('height', current_height)
                        .attr('id', 'video'+data.id)
                        .attr('preload', 'none')
                        .attr('data-uid', data.id)
                        .attr('data-name', 'playAnime');
                var newSource = $('<source/>').attr('src',data.direct_link);
                newVideo.append(newSource);
                videoPlayer.append(newVideo);
                $('.video_player_content').append(videoPlayer);
                sublime.prepare('video'+data.id,function(player2) {
                    player = player2;
                    player.on('metadata',function(player) {
                        player.seekTo(currentView);
                    });
                    setPlayer();
                    player.play();
                });
            });
        });

        function updateDislikesAndLinkes(data) {
            if(data.hasOwnProperty('likes')) {
                $('#thumbs-up-counter').html(data.likes);
                $('#thumbs-down-counter').html(data.dislikes);
            }
        }

        // Like
        $('div.glyphicon-thumbs-up').click(function(e) {
            $.ajax({
                url: '{{ path("loopanime_shows_episodeAjax") }}',
                data: {op: 'rating', id_episode: id_episode, ratingUp: 1},
                dataType: 'JSON'
            }).done(function(data) {
                if(data.hasOwnProperty('data')) {
                    data = data.data;
                    updateDislikesAndLinkes(data);
                    $('div.glyphicon-thumbs-down').css('color',"");
                    $('div.glyphicon-thumbs-up').css('color',"green");
                }
            });
        });

        // Dislike
        $('div.glyphicon-thumbs-down').click(function(e) {
            $.ajax({
                url: '{{ path("loopanime_shows_episodeAjax") }}',
                data: {op: 'rating', id_episode: id_episode, ratingUp: 0},
                dataType: 'JSON'
            }).done(function(data) {
                if(data.hasOwnProperty('data')) {
                    data = data.data;
                    updateDislikesAndLinkes(data);
                    $('div.glyphicon-thumbs-up').css('color', "");
                    $('div.glyphicon-thumbs-down').css('color', "red");
                }
            });
        });

        $('.nav-pills li.active a').trigger('click');

        var seekTo = false;
        function getLastProgress() {
            $.ajax({
                url: '{{ path("loopanime_shows_episodeAjax") }}',
                data: {op: 'get_last_progress', id_episode: id_episode},
                type: 'GET',
                dataType: 'JSON'
            }).done(function(data) {
                if(data.hasOwnProperty('data')) {
                    data = data.data;
                    var time = 0;
                    if(data.watchedTime > 60) {
                        time = Math.round(data.watchedTime / 60) + " Min(s)";
                    } else
                        time = data.watchedTime + " sec(s)";
                    if(confirm("You have seen "+ time +" of the episode on " + data.viewTime + ". Do you want to resume your progress?" )) {
                        seekTo = data.watchedTime;
                        player.on('metadata',function(player) {
                            player.seekTo(seekTo);
                        });
                        player.play();
                    }
                }
            });
        }

        function setPlayer() {
            clearInterval(saveProgress);
            player.on({
                play: function(player) {
                    saveProgress = setInterval(function(){saveProgressSeen()},5000);
                    console.log("player have been played");
                },
                pause: function(player) { clearInterval(saveProgress); console.log("player pause"); },
                stop: function(player) { clearInterval(saveProgress); console.log("player stop"); }
            });

        }

        sublime.ready(function() {
            player = sublime.player('video1');
            setPlayer();
            if(player !== undefined && player != null) {
                {% if app.user and app.user.preferences != null %}
                var preferencesMarkSeen = '{{ app.user.preferences.automaticTrack }}';
                switch(preferencesMarkSeen) {
                    case "askme_before_leave":
                        jQuery(window).bind('beforeunload', function(){
                            if(confirm('Do you want to mark this episode as seen?'))
                                $('#btn_mark_seen').trigger('click');
                        });
                        break;
                    case "on_video_finish":
                        player.on('end', function(player) {
                            if(!$('#btn_mark_seen').hasClass('btn-info'))
                                $('#btn_mark_seen').trigger('click');
                        });
                        break;
                    case "on_player_start":
                        player.on('start', function(player) {
                            if(!$('#btn_mark_seen').hasClass('btn-info'))
                                $('#btn_mark_seen').trigger('click');
                        });
                        break;
                    case "after_10min":
                        if(!$('#btn_mark_seen').hasClass('btn-info'))
                            setTimeout(automatic_markAsSeen(),600000);
                        break;
                    case "after_20min":
                        if(!$('#btn_mark_seen').hasClass('btn-info'))
                            setTimeout(automatic_markAsSeen(),1200000);
                        break;
                }
                {% endif %}
            }

            getLastProgress();
        });
    });
</script>
{% endblock %}