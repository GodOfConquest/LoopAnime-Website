<?php

namespace LoopAnime\ShowsBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * AnimesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AnimesRepository extends EntityRepository
{

    public function getAnimeByEpisode($idEpisode, $getResults = true) {
        $query = "SELECT a
                FROM
                    LoopAnime\ShowsBundle\Entity\Animes a
                    JOIN a.animesSeasons ase
                    JOIN ase.animesEpisodes ae
                WHERE
                    ae.id = '".$idEpisode."'";
        if($getResults)
            return $this->_em->createQuery($query)->getResult();
        else
            return $this->_em->createQuery($query);
    }

    public function getAnimesByTitle($title, $orderKey = "title", $order = "ASC", $getQuery = true) {
        $query = $this->createQueryBuilder("animes")
            ->select("animes")
            ->where('animes.title LIKE :title')
            ->orderBy("animes.".$orderKey, $order)
            ->setParameter("title", ''.$title.'%')
            ->getQuery();

        if($getQuery) {
            return $query;
        } else {
            return $query->getResult();
        }
    }

    public function getAnimesRecent($getQuery = true) {
        $query = $this->createQueryBuilder("animes")
            ->select("animes")
            ->orderBy("animes.startTime","DESC")
            ->getQuery();

        if($getQuery) {
            return $query;
        } else {
            return $query->getResult();
        }
    }

    public function getAnimesMostRated($getQuery = true) {
        $query = $this->createQueryBuilder("animes")
            ->select("animes")
            ->orderBy("animes.ratingUp","DESC")
            ->addOrderBy("animes.ratingCount", "DESC")
            ->getQuery();

        if($getQuery) {
            return $query;
        } else {
            return $query->getResult();
        }
    }

}
